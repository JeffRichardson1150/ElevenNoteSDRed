@model IEnumerable<ElevenNote.Models.NoteListItem>

@{
    ViewBag.Title = "Notes";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<!-- Check whether the SaveResult key exists in the dictionary. It won't remove it. -->
@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>
}
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NoteId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                Category Name
                <!--

                @Html.DisplayNameFor(model => model.Category.CategoryName)
                -->
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedUtc)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.NoteId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category.CategoryName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedUtc)
        </td>

        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.NoteId }) |
            @Html.ActionLink("Details", "Details", new { id = item.NoteId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.NoteId })
        </td>
    </tr>
        }

    </table>
